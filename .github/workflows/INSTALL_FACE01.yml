# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# See below for how to write the format.
# [最低限の定義はこんな感じ。何の意味もないやつ。](https://tech.guitarrapc.com/entry/2020/01/06/071911#YAML%E3%82%B7%E3%83%B3%E3%82%BF%E3%83%83%E3%82%AF%E3%82%B9)
name: INSTALL_FACE01

on:
  schedule:
    - cron: '30 23,10 * * *'
  push:
    branches:
      - master

# permissions:
#   contents: read

jobs:
  Install-FACE01_SAMPLE:
    runs-on: ubuntu-20.04
    steps:
      - name: Install libraries
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y build-essential
          sudo apt install -y cmake
          sudo apt install -y ffmpeg
          sudo apt install -y fonts-mplus
          sudo apt install -y git
          sudo apt install -y libavcodec-dev
          sudo apt install -y libavformat-dev
          sudo apt install -y libswscale-dev
          sudo apt install -y libx11-dev
          sudo apt install -y python3-dev
          sudo apt install -y python3-tk
          sudo apt install -y python3-venv
          sudo apt install -y wget
        shell: bash

      - name: Get cuda apt-key
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
          sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
          sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
        shell: bash

      - name: Install cuda libraries
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo ubuntu-drivers autoinstall
          sudo apt install -y cuda
          sudo apt install -y libcublas
          sudo apt install -y libcudnn8
          sudo apt install -y libcudnn8-dev
          sudo apt install -y liblapack-dev
          sudo apt install -y libopenblas-dev
          sudo apt install -y nvidia-cuda-toolkit
          sudo apt autoremove -y
        shell: bash

      - name: Append lines to .bashrc
        run: |
          cat << EOS >> ~/.bashrc
          export PATH="/usr/local/cuda/bin/:$PATH"
          export LD_LIBRARY_PATH="/usr/local/cuda/lib64/:$LD_LIBRARY_PATH"
          export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
          EOS
          source ~/.bashrc
        shell: bash

      - name: Git clone
        run: git clone https://github.com/yKesamaru/FACE01_SAMPLE.git
        shell: bash

      - name: Make Python virtual environment
        run: |
          cd ./FACE01_SAMPLE
          python3 -m venv ./
          source bin/activate
          pip cache remove dlib
          pip install -U pip
          pip install -U wheel
          pip install -U setuptools
          pip install -r requirements.txt
          tar -jxvf dlib-19.24.tar.bz2
          cd dlib-19.24
          python3 setup.py install --clean
          cd ../
        shell: bash

      - name: Start CALL_FACE01.py
        run: python CALL_FACE01.py
        shell: bash

